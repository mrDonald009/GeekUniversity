"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def calc(num,even=0,uneven=0,step=0):

    if len(num) == 0:
        return 0

    else:

        if len(num) == step:
            print(f'Количество четных и нечетных цифр в числе равно: ({even}, {uneven})')

        elif int(list(num)[step]) % 2 != 0:
            uneven += 1
            step += 1
            calc(num,even,uneven,step)

        elif int(list(num)[step]) % 2 == 0:
            even += 1
            step += 1
            calc(num,even,uneven,step)

calc(input('Введите число: '))